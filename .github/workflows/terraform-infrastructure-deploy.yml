name: "ðŸš€ Deployment of IaC on push"

permissions: read-all

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev

env:
  tf_version: 1.9.4
  tg_version: 0.66.4
  working_directory: "enviroments/prod/us-east-1/components/ecr_lambda_test2"
  AWS_REGION: ${{ secrets.AWS_REGION }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  checks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.6

      - name: Check terragrunt HCL formatting
        uses: gruntwork-io/terragrunt-action@v2.1.3
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ env.working_directory }}
          tg_command: "hclfmt --terragrunt-check --terragrunt-diff"

  plan:
    runs-on: ubuntu-latest
    needs: [checks]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.6

      - name: Plan
        uses: gruntwork-io/terragrunt-action@v2.1.3
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ env.working_directory }}
          tg_command: "run-all plan"

  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: user/app:latest

  apply:
    runs-on: ubuntu-latest
    needs: [plan, docker]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.7

      - name: Apply
        uses: gruntwork-io/terragrunt-action@v2.1.3
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ env.working_directory }}
          tg_command: "run-all apply"
 

  
